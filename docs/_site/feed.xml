<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>OPEN SOURCE VULNERABILITY ASSESSMENT AND MANAGEMENT TOOL</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 29 Jan 2022 01:01:45 +0530</pubDate>
    <lastBuildDate>Sat, 29 Jan 2022 01:01:45 +0530</lastBuildDate>
    <generator>Jekyll v4.2.1</generator>
    
      <item>
        <title>Integrate ArcherySec + OWASP ZAP in Jenkins CI/CD Pipeline</title>
        <description>&lt;p&gt;Continuous Integration / Continuous Deployment (CI/CD) processes allow software developers to detect problems early in the development lifecycle and improve productivity with automation.&lt;/p&gt;

&lt;p&gt;&lt;em&gt; “&lt;a href=&quot;http://jenkins.io&quot;&gt;Jenkins&lt;/a&gt; is a popular open-source continuous integration solution that helps teams manage the automation of software build, as well as monitor the execution of external jobs that supports the software build.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you run security testing in your CI/CD pipeline, you want to store vulnerability data in centralize way and manage them easily for your every single pipeline. DevOps teams are facing challenges to have a central place where they can visualize vulnerabilities transparently. Vulnerability Management is one of the challenging part for every organization.&lt;/p&gt;

&lt;p&gt;In this article we’ll be going learn how to integrate Archery tool in your jenkins CI/CD pipeline.&lt;/p&gt;

&lt;blockquote&gt;&lt;em&gt;&quot;ArcherySec is an open source vulnerability assessment and management tool that helps developer and pentester to perform vulnerability assessment and manage vulnerabilities.&quot;&lt;/em&gt;&lt;/blockquote&gt;

&lt;p&gt;Archery has &lt;a href=&quot;https://developers.archerysec.com/&quot;&gt;API&lt;/a&gt; that interact with Archery tool and automate vulnerability assessment process.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/archerysec/archerysec-cli&quot;&gt;Archerysec-cli&lt;/a&gt; uses the API to interact Archery tool from console. We often use archerysec-cli in our CI/CD pipeline steps to perform scan and feed vulnerability data into Archery tool.&lt;/p&gt;

&lt;h3 id=&quot;configure-lab-environment&quot;&gt;Configure Lab Environment:&lt;/h3&gt;

&lt;p&gt;Requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Docker &amp;amp; docker-compose&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Steps to configure Lab Environment.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/archerysec/jenkins_blog.git
$ cd jenkins_blog
$ docker-compose up --build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have written small scripts and Infrastructure as a code that allow you to spin up environment on your system.&lt;/p&gt;

&lt;p&gt;docker-compose.yml&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: &lt;span class=&quot;s1&quot;&gt;&apos;3.6&apos;&lt;/span&gt;

services:
  jenkins:
    build: ./jenkins
    ports:
      - &lt;span class=&quot;s2&quot;&gt;&quot;8080:8080&quot;&lt;/span&gt;
      - &lt;span class=&quot;s2&quot;&gt;&quot;50000:50000&quot;&lt;/span&gt;
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      &lt;span class=&quot;c&quot;&gt;# - /usr/bin/docker:/usr/bin/docker&lt;/span&gt;
      - /usr/local/bin/docker:/usr/local/bin/docker
      - /tmp:/tmp
    expose:
      - &lt;span class=&quot;s2&quot;&gt;&quot;8080&quot;&lt;/span&gt;
      - &lt;span class=&quot;s2&quot;&gt;&quot;50000&quot;&lt;/span&gt;
    container_name: jenkins
    
  db:
    image: postgres:10.1-alpine
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    environment:
      - &lt;span class=&quot;nv&quot;&gt;POSTGRES_DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archerysec
      - &lt;span class=&quot;nv&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archerysec
      - &lt;span class=&quot;nv&quot;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archerysec

  archerysec:
    image: archerysec/archerysec
    ports:
      - &lt;span class=&quot;s2&quot;&gt;&quot;8000:8000&quot;&lt;/span&gt;
    expose:
      - &lt;span class=&quot;s2&quot;&gt;&quot;8000&quot;&lt;/span&gt;
    depends_on:
      - db
    links:
      - db:db
    environment:
      - &lt;span class=&quot;nv&quot;&gt;DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archerysec
      - &lt;span class=&quot;nv&quot;&gt;DB_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archerysec
      - &lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user
      - &lt;span class=&quot;nv&quot;&gt;EMAIL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;admin@user.com
      - &lt;span class=&quot;nv&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;admin@123A
      - &lt;span class=&quot;nv&quot;&gt;DB_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archerysec
      - &lt;span class=&quot;nv&quot;&gt;DB_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;db
      - &lt;span class=&quot;nv&quot;&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archerysecurity.settings.development
      - &lt;span class=&quot;nv&quot;&gt;DJANGO_SECRET_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DJANGO_SECRET_KEY&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SETME&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
      - &lt;span class=&quot;nv&quot;&gt;DJANGO_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
      - &lt;span class=&quot;nv&quot;&gt;EMAIL_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mailhog
      - &lt;span class=&quot;nv&quot;&gt;EMAIL_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1025
    container_name: archerysec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once containers are up and running you could check whether they are accessible or not by accessing the below URL’s.&lt;/p&gt;

&lt;p&gt;ArcherySec: http://your_system_ip_address:8000&lt;br /&gt;
Jenkins: http://your_system_ip_address:8080&lt;br /&gt;
OWASP ZAP: http://your_system_ip_address:8090&lt;/p&gt;

&lt;h3 id=&quot;setup-cicd-policy-for-zap-scanner&quot;&gt;Setup CI/CD Policy for ZAP Scanner&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Open ArcherySec portal.&lt;/li&gt;
  &lt;li&gt;Go to settings page http://your_system_ip_address:8000&lt;/li&gt;
  &lt;li&gt;Username: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin@user.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Password: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin@123A&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add Project&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI/CD&lt;/code&gt; module&lt;/li&gt;
  &lt;li&gt;Copy Code and Place into jenkins pipeline&lt;/li&gt;
  &lt;li&gt;Replace the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--report_path=$(pwd)/archerysec-scans-report&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--report_path=/tmp/archerysec-scans-report&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add Policy&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/jenkins/archerysec-ci-cd.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/jenkins/archerysec-ci-cd-policy.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now run all these script on Jenkins CI pipeline.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Login into Jenkins server.&lt;/li&gt;
  &lt;li&gt;Create new job.&lt;/li&gt;
  &lt;li&gt;Give the name of the job and select as pipeline.&lt;/li&gt;
  &lt;li&gt;Go to pipeline section and copy paste  below code.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;stages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;DAST&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;parallel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;OWASP ZAP&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&apos;
                 pip install archerysec-cli --force  
                 mkdir /tmp/archerysec-scans-report
archerysec-cli -h http://192.168.1.6:8000 -t SWmasE5lx2BN1-jztwBMZhWcugCEPmQPVr7yFovZhEUs66Jz2oJAvLGMOZRTQ_9s --cicd_id=143647e0-379f-4094-9f7b-aa09db1f5e8e --project=25a7547a-aef6-4d63-a994-69ea52e79928 --zap-base-line-scan --report_path=/tmp/archerysec-scans-report
                  &apos;&apos;&apos;&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/jenkins/pipeline_content.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Apply and save.&lt;/li&gt;
  &lt;li&gt;Now click on Build Now.&lt;/li&gt;
  &lt;li&gt;Go to Console Output and notice that the scripts are running.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/jenkins/jenkins_ruuning_zap.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now open ArcherySec and go to Scans &amp;gt; Dynamic Scans. Notice that the scan are running and given the running status % of scan.&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/jenkins/blog_archery_running.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Jenkins will now run OWASP ZAP using ArcherySec at your desired frequency and will tell you whether the build failed or succeeded. In a bigger setup, ArcherySec will be part of your build process. You can set up notifications and customize Jenkins as per your needs.
You can use a wide variety of other configurations to make your collection more dynamic.&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;Following the steps above, you will be able to set up a continuous integration process that includes ArcherySec automated Dynamic OWASP ZAP tests for the application under scan. Each commit will trigger an automated test run. Once the test run has finished, you’ll able to manage vulnerabilities using ArcherySec Tool.&lt;/p&gt;

&lt;h4 id=&quot;get-in-touch&quot;&gt;Get in Touch&lt;/h4&gt;

&lt;p&gt;Send us email at &lt;a href=&quot;info@archerysec.com&quot;&gt;info@archerysec.com&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;learn-more&quot;&gt;Learn More&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.archerysec.com/&quot;&gt;http://www.archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/archerysec/archerysec&quot;&gt;https://github.com/archerysec/archerysec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.archerysec.com/&quot;&gt;https://docs.archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.archerysec.com/&quot;&gt;https://developers.archerysec.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 29 Jan 2022 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/Integrate-ArcherySec-OWASP-ZAP-in-Jenkins-CICD-Pipeline/</link>
        <guid isPermaLink="true">http://localhost:4000/Integrate-ArcherySec-OWASP-ZAP-in-Jenkins-CICD-Pipeline/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>Deploy ArcherySec as a Serverless on AWS using Zappa</title>
        <description>&lt;p&gt;ArcherySec is handy tool to feed vulnerability data from DevSecOps pipeline. Vulnerability management is a key part of your DevSecOps process. In our last &lt;a href=&quot;https://blog.archerysec.com/Integrate-ArcherySec-OWASP-ZAP-in-Jenkins-CICD-Pipeline/&quot;&gt;blog post&lt;/a&gt;, we saw how to integrate ArcherySec in our CI/CD pipeline. In this blog post  we’ll see how ArcherySec can be deployed as a serverless.&lt;/p&gt;

&lt;p&gt;We often heard about “serverless” in computer world. Serverless is a cloud computing performance model where the cloud provider dynamically controls the allocation and provisioning of servers. A serverless application works in stateless compute containers that are event-prompted, temporary, and completely handled by the cloud provider. The pricing in the serverless is based on the count of executions rather than pre-purchased compute capacity.&lt;/p&gt;

&lt;p&gt;Think how if your vulnerability management application is serverless and event-driven. We need ArcherySec API when we are feeding data from our DevSecOps pipeline or when we are analyzing vulnerabilities. Hosting ArcherySec application on an EC2 Instance or in containers like ECS make us pay for the idle time too.&lt;/p&gt;

&lt;p&gt;In this article we will guide you to deploy a ArcherySec application as server-less using &lt;a href=&quot;https://github.com/Miserlou/Zappa&quot;&gt;Zappa&lt;/a&gt;. Before start deploying ArcherySec application lets understand how Zappa works.&lt;/p&gt;

&lt;h4 id=&quot;zappa&quot;&gt;Zappa&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Miserlou/Zappa&quot;&gt;Zappa&lt;/a&gt; is an open source project that helps you in building and deploying server-less, event-driven Python applications. It helps in deploying and building any WSGI compatible applications that are developed in python. It uses AWS Lambda and AWS API Gateway, and Amazon S3.&lt;/p&gt;

&lt;p&gt;When we talk about application hosted on server-less, basically it’s not really serverless, there still is a webserver in a cloud that serving your web responses. The difference is the server life spent is measured in milliseconds. The entire life cycle of a server is within a single HTTP request.&lt;/p&gt;

&lt;p&gt;In a traditional client server communication the client makes a request to the web server, calls the application HTML, CSS, etc and code sends back a response to the browser. The server should be up and running 24/7 just waiting for requests and responses.&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/Http.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;
&lt;center&gt;&lt;small&gt;Source: https://www.codeproject.com/KB/aspnet/HttpZipFolder/HttpZipFolder_Fig2.png&lt;/small&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;With AWS Lambda + AWS API Gateway when the HTTP request comes in through the AWS API Gateway, then it creates the instance of the AWS Lambda function which process the request returns through the AWS API Gateway and then the server is wiped out. So you have used a server in a matter of milliseconds and a major advantage of this approach is that you don’t have to worry about keeping your server up and running 24/7 and you only pay aws instance for a millisecond.&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/architecture.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;
&lt;center&gt;&lt;small&gt;Source: https://medium.com/38th-street-studios/the-move-to-serverless-digital-ocean-heroku-aws-oh-my-ea5224a8d4bb &lt;/small&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;aws-lambda&quot;&gt;AWS Lambda&lt;/h4&gt;

&lt;p&gt;AWS Lambda lets you run code without provisioning or managing servers. You pay only for the compute time you consume, there is no charge when your code is not running.&lt;/p&gt;

&lt;p&gt;So AWS Lambda function is perfect solution for us. It scales automatically and we pay only when we consume it. If our code is not running then it’s not chargeable. Also its running with zero administration.&lt;/p&gt;

&lt;h4 id=&quot;configure-aws-credentials&quot;&gt;Configure AWS Credentials&lt;/h4&gt;

&lt;p&gt;Before start using AWS, we have to make sure we have a valid AWS account and have the AWS access-key which we are going to use in our environment.&lt;/p&gt;

&lt;p&gt;Get the access key from IAM&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Go to IAM console and navigate to users.&lt;/li&gt;
  &lt;li&gt;Go to Security Credentials&lt;/li&gt;
  &lt;li&gt;Create access key and note down the value of “Access key ID” &amp;amp; “Secret access key”.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/access_key.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a folder called aws at the root level.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
mkdir .aws
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
###~/.aws/credentials

[default]
aws_access_key_id = XXXXXXXXXXXXXXXXXXXXXXXXXXXX
aws_secret_access_key = XXXXXXXXXXXXXXXXXXXXXXXXXXXX

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;permissions&quot;&gt;Permissions&lt;/h4&gt;

&lt;p&gt;Make sure you have provided correct permissions to the user. We need following permission to run Zappa.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AWSLambda&lt;/li&gt;
  &lt;li&gt;AmazonS3&lt;/li&gt;
  &lt;li&gt;AmazonAPIGateway&lt;/li&gt;
  &lt;li&gt;AWSDeepRacerCloudFormationAccessPolicy&lt;/li&gt;
  &lt;li&gt;AmazonEC2&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;roles&quot;&gt;Roles&lt;/h4&gt;

&lt;p&gt;We need to create role and provide the appropriate permissions. Zapp configuration file will use and deploy applications on Lambda and API gateway.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to Roles and create new role.&lt;/li&gt;
  &lt;li&gt;Attached the following policies
    &lt;ul&gt;
      &lt;li&gt;AWSLambda&lt;/li&gt;
      &lt;li&gt;AmazonAPIGatewayPushToCloudWatchLogs&lt;/li&gt;
      &lt;li&gt;AWSLambdaVPCAccessExecutionRole&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Move to Trust Relationship and Edit Trust Relationship.&lt;/li&gt;
  &lt;li&gt;Copy and paste the below code.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
{
  &quot;Version&quot;: &quot;2012-10-17&quot;,
  &quot;Statement&quot;: [
    {
      &quot;Sid&quot;: &quot;&quot;,
      &quot;Effect&quot;: &quot;Allow&quot;,
      &quot;Principal&quot;: {
        &quot;Service&quot;: [
          &quot;events.amazonaws.com&quot;,
          &quot;lambda.amazonaws.com&quot;,
          &quot;apigateway.amazonaws.com&quot;
        ]
      },
      &quot;Action&quot;: &quot;sts:AssumeRole&quot;
    }
  ]
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to trust the amazonaws events, lambda and apigateway end points.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Note down Role Name and Role ARN as we need in Zappa configuration file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;deploy-archerysec-application-using-zappa&quot;&gt;Deploy ArcherySec Application Using Zappa&lt;/h4&gt;

&lt;p&gt;Clone ArcherySec project folder in our local system.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/archerysec/archerysec.git
$ cd archerysec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install ArcherySec required library&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ pip install -r requirements-zappa.txt

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After installing Zappa, let’s configure Zappa&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ zappa init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which will ask us for the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Name of environment - default ‘dev’&lt;/li&gt;
  &lt;li&gt;S3 bucket for deployments. If the bucket does not exist, zappa will create it for us. Zappa uses this bucket to hold the zappa package temporarily while it is being transferred to AWS lambda, which is then deleted after deployment.&lt;/li&gt;
  &lt;li&gt;Project’s settings provide as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archerysecurity.settings.base&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some additional parameter required by Zappa configuration file.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Edit the zappa_settings.json file&lt;/li&gt;
  &lt;li&gt;Provide the aws_region: us-east-1&lt;/li&gt;
  &lt;li&gt;Manage_roles: false&lt;/li&gt;
  &lt;li&gt;role_name:&lt;/li&gt;
  &lt;li&gt;role_arn:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Zappa configuration file&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
{
    &quot;dev&quot;: {
	&quot;aws_region&quot;: &quot;us-east-1&quot;,
        &quot;django_settings&quot;: &quot;archerysecurity.settings.base&quot;,
        &quot;profile_name&quot;: &quot;default&quot;,
        &quot;project_name&quot;: &quot;archerysec-aws&quot;,
        &quot;runtime&quot;: &quot;python2.7&quot;,
        &quot;s3_bucket&quot;: &quot;zappa-test&quot;,
	&quot;manage_roles&quot;: false,
	&quot;role_name&quot;: &quot;archerysectest&quot;,
	&quot;role_arn&quot;: &quot;arn:aws:iam::868167788748:role/archerysectest&quot;,
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let us deploy the app&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ zappa deploy dev&lt;/code&gt;&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/after_deploy.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now you need to add your AWS API Gateway host as allowed host in application settings file and disable debugging by marking it as False.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Edit settings file:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archerysecurity/settings/base.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;DEBUG = False&lt;/li&gt;
  &lt;li&gt;Replace * with your host in Allowed host &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALLOWED_HOSTS = [&apos;your_api_gateway_host&apos;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/debug.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add below lines in setting file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archerysecurity/settings/base.py &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
FORCE_SCRIPT_NAME = &quot;/dev/&quot;

LOGIN_URL = FORCE_SCRIPT_NAME + &apos;login/&apos;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Update code by running command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zappa update dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Awsome!! we have successfully deployed ArcherySec tool on AWS Lambda function.&lt;/p&gt;

&lt;p&gt;Application can be accessible on API Gateway URL: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://yoururl.execute-api.us-east-1.amazonaws.com/dev/login/?next=/dev/&lt;/code&gt;&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/application_accessible.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Noticed that the application is not loading static files. We need to use AWS S3 bucket to upload static files and load statics file using django django-s3-storage.&lt;/p&gt;

&lt;h4 id=&quot;static-file-on-aws-s3-bucket&quot;&gt;Static file on AWS S3 Bucket&lt;/h4&gt;

&lt;p&gt;Before setting up django we need to configure S3 bucket.&lt;/p&gt;

&lt;p&gt;To serve the static file we need to enable CORS for the S3 bucket, which enables browsers to get resources from different urls.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to S3 bucket and then Permissions.&lt;/li&gt;
  &lt;li&gt;Click on CORS Configuration.&lt;/li&gt;
  &lt;li&gt;Paste the below lines.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;CORSConfiguration&amp;gt;
        &amp;lt;CORSRule&amp;gt;
            &amp;lt;AllowedOrigin&amp;gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&amp;lt;/AllowedOrigin&amp;gt;
            &amp;lt;AllowedMethod&amp;gt;GET&amp;lt;/AllowedMethod&amp;gt;
            &amp;lt;MaxAgeSeconds&amp;gt;3000&amp;lt;/MaxAgeSeconds&amp;gt;
            &amp;lt;AllowedHeader&amp;gt;Authorization&amp;lt;/AllowedHeader&amp;gt;
        &amp;lt;/CORSRule&amp;gt;
&amp;lt;/CORSConfiguration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;configure-archerysec-for-s3&quot;&gt;Configure ArcherySec for S3&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Install django-s3-storage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ pip install django-s3-storage&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;and also add it in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; file.&lt;/li&gt;
  &lt;li&gt;Now update the &lt;i&gt;settings.py&lt;/i&gt; file to add &lt;i&gt;django_s3_storage&lt;/i&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INSTALLED_APPS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
INSTALLED_APPS = (
          ...,
          &apos;django_s3_storage&apos;,
     )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;and also add these lines at the bottom&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
S3_BUCKET = &quot;itestzappa-test&quot;

STATICFILES_STORAGE = &quot;django_s3_storage.storage.StaticS3Storage&quot;

AWS_S3_BUCKET_NAME_STATIC = S3_BUCKET

STATIC_URL = &quot;https://%s.s3.amazonaws.com/&quot; % S3_BUCKET

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Now load the static files using below command&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ python manage.py collectstatic --noinput

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s take a while to upload static files on AWS s3 bucket.&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/statics_files.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Once the static files are uploaded on s3 bucket you can update using Zappa command. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zappa update dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and after updating zappa, let us check by refreshing the page.&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/archery-login.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;database-connection&quot;&gt;Database Connection&lt;/h4&gt;

&lt;p&gt;Django supports both MySQL and PostgreSQL. Hence you can integrated ArcherySec database either of any one databases.&lt;/p&gt;

&lt;h4 id=&quot;setup-postgresql-on-aws-rds&quot;&gt;Setup PostgreSQL on AWS RDS&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Go to AWS RDS&lt;/li&gt;
  &lt;li&gt;Create new database&lt;/li&gt;
  &lt;li&gt;Select PostgreSQL&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/select_postgresql.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Check on “Only enable options eligible for RDS Free Usage Tier”&lt;/li&gt;
  &lt;li&gt;Provide “DB instance identifier”, “Master username”, “Master password”&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/db_names.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setup “Network &amp;amp; Security” which should be same of ArcherySec Lambda function&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/network_sec.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add database details in ArcherySec settings file once database has been created.&lt;/li&gt;
  &lt;li&gt;Edit file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archerysecurity/settings/base.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
DATABASES = {
    &apos;default&apos;: {
        &apos;ENGINE&apos;: &apos;django.db.backends.postgresql_psycopg2&apos;,
        &apos;NAME&apos;: &apos;archerysecdbname&apos;,
        &apos;USER&apos;: &apos;administrator&apos;,
        &apos;PASSWORD&apos;: &apos;this_is_not_a_good_password&apos;,
        &apos;HOST&apos;: &apos;archerysec-db.cr3erer3sjdlk.us-east-1.rds.amazonaws.com&apos;,
        &apos;PORT&apos;: &apos;5432&apos;,
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;zappa-settings&quot;&gt;Zappa Settings&lt;/h4&gt;

&lt;p&gt;Now we add the VPC configuration to our Zappa settings file so that the lambda functions can connect to the database.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;dev&quot;: {
        &quot;django_settings&quot;: &quot;archerysecurity.settings.base&quot;,
        &quot;s3_bucket&quot;: &quot;archerysectest-code&quot;,
        &quot;aws_region&quot;: &quot;us-east-1&quot;,
        &quot;vpc_config&quot; : {
           &quot;SubnetIds&quot;: [ &quot;subnet-f3446aba&quot;,&quot;subnet-c5b8c79e&quot; ], // use the private subnet
           &quot;SecurityGroupIds&quot;: [ &quot;sg-9a9a1dfc&quot; ]

       }

   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;migrate-database&quot;&gt;Migrate database&lt;/h4&gt;

&lt;p&gt;Create your migrations and push the updated code. `
zappa update dev
`&lt;/p&gt;

&lt;p&gt;Invoke the zappa manage command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zappa manage dev migrate&lt;/code&gt;&lt;/p&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/migrate.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;after updating zappa, let us check by refreshing the page.&lt;/li&gt;
  &lt;li&gt;Create new user using Signup form &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://your_apigateway_end.execute-api.us-east-1.amazonaws.com/dev/webscanners/signup/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/signup.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Login into account.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/after_login.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;restrict-archerysec-signup-page-from-publicly&quot;&gt;Restrict ArcherySec signup page from publicly.&lt;/h4&gt;

&lt;p&gt;Currently ArcherySec signup page accessible publicly and we need to restrict signup page from publicly.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Edit file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webscanners/web_views.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Search def signup function and comment &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@public&lt;/code&gt; decorator&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/web_views.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Edit file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archeryapi/views.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Search def class CreateUsers and comment &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@public&lt;/code&gt; decorator&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/createuser_api.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Edit file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archerysecurity/settings/base.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Search &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;STRONGHOLD_PUBLIC_URLS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Comment &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r&apos;^/api/createuser/$&apos;,&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;div class=&quot;img-border&quot; style=&quot;width: 70%;&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/lambda/comment_api_create_user.png&quot; /&gt;&lt;/div&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Update code by running command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zappa update dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congratulations!! Now ArcherySec has been deployed as serverless, you can check lambda logs using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zappa tail&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://romandc.com/zappa-django-guide/&quot;&gt;https://romandc.com/zappa-django-guide/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.agiliq.com/blog/2019/01/complete-serverless-django/&quot;&gt;https://www.agiliq.com/blog/2019/01/complete-serverless-django/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Miserlou/Zappa&quot;&gt;https://github.com/Miserlou/Zappa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=plUrbPN0xc8&amp;amp;t=214s&quot;&gt;https://www.youtube.com/watch?v=plUrbPN0xc8&amp;amp;t=214s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 01 Jul 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/Deploy-ArcherySec-as-a-Serverless-on-AWS-using-Zappa/</link>
        <guid isPermaLink="true">http://localhost:4000/Deploy-ArcherySec-as-a-Serverless-on-AWS-using-Zappa/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>HITB Armory – Tools Showcase 2018</title>
        <description>&lt;p&gt;We’re excited to announce that we will be presenting Archery Tool at &lt;a href=&quot;https://conference.hitb.org/hitbsecconf2018dxb/&quot;&gt;HITBSECCONF2018 DUBAI&lt;/a&gt;! The conference will be held 25th - 28th November 2018 Grand Hyatt Dubai, United Arab Emirates.&lt;/p&gt;

&lt;p&gt;Among the many special events within the HITB conference is the &lt;a href=&quot;https://conference.hitb.org/hitbsecconf2018dxb/hitb-armory/&quot;&gt;HITB Armory Tools Showcase&lt;/a&gt;. Armory is an exhibition Organized in collaboration with &lt;a href=&quot;http://www.toolswatch.org/&quot;&gt;Tools Watch&lt;/a&gt; and &lt;a href=&quot;https://www.opposingforce.it/en/&quot;&gt;Opposing Force&lt;/a&gt;, the HITB Armory is a brand new dedicated area where independent researchers will get to show off their projects, run their demos and allow you to play around with their awesome security tools!&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/HITB_Armory.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;After already having presented &lt;a href=&quot;https://archerysec.com/&quot;&gt;Archery&lt;/a&gt; at the Arsenals in Black Hat USA and Black Hat Singapore this will be first time showing Archery at HITB Conference. For those of you who are not so familiar with the software, Archery is an opensource vulnerability assessment and management tool which helps developers and pentesters to perform scans and manage vulnerabilities. Archery uses popular opensource tools to perform comprehensive scanning for web application and network. It also performs web application dynamic authenticated scanning and covers the whole applications by using selenium. The developers can also utilize the tool for implementation of their DevOps CI/CD environment.&lt;/p&gt;

&lt;p&gt;We’ll be presenting on 28th November on &lt;em&gt;Booth 2B from 10:00 – 10:30&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If you are coming to the event, we definitely want to see you! We are happy to show you Archery and answer any questions you might have. We look forward to see everyone there.&lt;/p&gt;

&lt;h4 id=&quot;learn-more&quot;&gt;Learn More&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.archerysec.com/&quot;&gt;http://www.archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/archerysec/archerysec&quot;&gt;https://github.com/archerysec/archerysec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.archerysec.com/&quot;&gt;https://docs.archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.archerysec.com/&quot;&gt;https://developers.archerysec.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 15 Nov 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/HITB-Armory-Tools-Showcase/</link>
        <guid isPermaLink="true">http://localhost:4000/HITB-Armory-Tools-Showcase/</guid>
        
        
        <category>Conference</category>
        
        <category>Introduction</category>
        
      </item>
    
      <item>
        <title>Announcing the First Release of Archery Tool CLI</title>
        <description>&lt;p&gt;&lt;br /&gt;
We’re happy to announce the first release of archerysec-cli (Command Line Interface). We started on this as a way to automate some of the instructions available on archerysec tool, but quickly realized there was a lot more potential to make lives of developers even better. Archerysec cli will help you to interact with archery tool.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;To install the latest release from PyPI, you can run the following command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install archerysec-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To install the latest development version of Archerysec CLI, you can run the following:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/archerysec/archerysec-cli.git
$ cd archerysec-cli
$ pip install -r requirements.txt

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;To use Archery CLI, you need to set the port Archery runs on (defaults to 8000) and the path to the folder in which Archery is installed. 
You can Use Archery installation instruction from &lt;a href=&quot;https://docs.archerysec.com/#quick-start&quot;&gt;Archery DOC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Archery CLI can then be used with the following commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ~/archerysec $ archerysec-cli --help
                   
                   _                      _____
     /\            | |                    / ____|
    /  \   _ __ ___| |__   ___ _ __ _   _| (___   ___  ___
   / /\ \ | &apos;__/ __| &apos;_ \ / _ \ &apos;__| | | |\___ \ / _ \/ __|
  / ____ \| | | (__| | | |  __/ |  | |_| |____) |  __/ (__
 /_/    \_\_|  \___|_| |_|\___|_|   \__, |_____/ \___|\___|
                                     __/ |
                                    |___/

 Copyright (C) 2021 ArcherySec CLI v2.0.1

Usage: cli.py [OPTIONS]

Options:
  -h, --host TEXT        Provide ArcherySec End Point Address.
  -t, --token TEXT       Provide Auth token from ArcherySec.
  -p, --path TEXT        Report File input
  --file-type TEXT       File type
  --target TEXT          target name or url
  -s, --scanner TEXT     Select scanners ( zap_scan, burp_scan, arachni,
                         acunetix, netsparker, webinspect,
                         banditscan,dependencycheck,findbugs, checkmarx,
                         clair, trivy, gitlabsca, gitlabsast,
                         gitlabcontainerscan, npmaudit, nodejsscan,
                         semgrepscan, tfsec, whitesource, inspec, dockle,
                         nessus, openvas, nikto, twistlock, brakeman, )

  -th, --threshold TEXT  threshold type (ex. fail, pass)
  --project TEXT         Project ID
  --cicd_id TEXT         CICD Policies ID
  --upload               Upload Report
  --project-create       Create New Project
  --bandit               Run Bandit Scan
  --dependency-check     Run dependency-check Scan
  --project-name TEXT    Create New Project
  --project-disc TEXT    Create New Project
  --code_path TEXT       Path of the source code
  --report_path TEXT     Path of the Report
  --help                 Show this message and exit.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;create-project&quot;&gt;Create Project:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;--createproject&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--project_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test_project&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--project_disc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test project&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-zap-scan&quot;&gt;Upload ZAP Scan:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/OWASP-ZAP-v2.7.0.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;zap_scan &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-burp-scan&quot;&gt;Upload Burp Scan:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/Burp_Report.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;burp_scan &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-arachni-scan&quot;&gt;Upload arachni Scan:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli  &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/Arachni_v1.3.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arachni &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-acunetix-scan&quot;&gt;Upload acunetix Scan:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/Acunetix_report_sample.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;acunetix &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-netsparker-scan&quot;&gt;Upload netsparker Scan:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/Netsparker_report.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;netsparker &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-webinspect-scan&quot;&gt;Upload webinspect scan:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/webinspect.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;webinspect &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-banditscan-scan&quot;&gt;Upload banditscan scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/banditscan.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;banditscan &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-dependencycheck-scan&quot;&gt;Upload dependencycheck scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/dependencycheck.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dependencycheck &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-findbugs-scan&quot;&gt;Upload findbugs scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/findbugs.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;findbugs &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-checkmarx-scan&quot;&gt;Upload checkmarx scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/checkmarx.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;checkmarx &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-clair-scan&quot;&gt;Upload clair scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/clair.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;clair &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-trivy-scan&quot;&gt;Upload trivy scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/trivy.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;trivy &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-git-lab-sca-scan&quot;&gt;Upload Git Lab SCA scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/gitlabsca.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;gitlabsca &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-git-lab-sast-scan&quot;&gt;Upload Git Lab SAST scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/gitlabsast.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;gitlabsast &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-git-lab-container-scan&quot;&gt;Upload Git Lab Container scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/gitlabcontainerscan.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;gitlabcontainerscan &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-npmaudit-scan&quot;&gt;Upload npmaudit scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/npmaudit.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;npmaudit &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-nodejsscan-scan&quot;&gt;Upload nodejsscan scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/nodejsscan.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nodejsscan &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-netsparker-scan-1&quot;&gt;Upload netsparker scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/semgrepscan.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;netsparker &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-tfsec-scan&quot;&gt;Upload tfsec scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/tfsec.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tfsec &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-whitesource-scan&quot;&gt;Upload whitesource scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/whitesource.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;whitesource &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-inspec-scan&quot;&gt;Upload inspec scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/inspec.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;inspec &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-dockle-scan&quot;&gt;Upload dockle scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/dockle.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dockle &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-nessus-scan&quot;&gt;Upload nessus scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/nessus.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nessus &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-openvas-scan&quot;&gt;Upload openvas scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/openvas.xml &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XML &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;openvas &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-twistlock-scan&quot;&gt;Upload twistlock scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/twistlock.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;twistlock &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;upload-brakeman-scan&quot;&gt;Upload brakeman scan&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;archerysec-cli &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; http://127.0.0.1:8000 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; VpVSD99bX25yW27f-yv8q562U9ObZfbWnBLVkjfRjQ-FR52p4GlhjpYuCJwY56_x &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /report/sample/brakeman.json &lt;span class=&quot;nt&quot;&gt;--file-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JSON &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASFLKSF &lt;span class=&quot;nt&quot;&gt;--scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;brakeman &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eaf6f89e-56ee-4ef7-8257-07b7136c9e31 &lt;span class=&quot;nt&quot;&gt;--upload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;learn-more&quot;&gt;Learn More&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://archerysec.com/&quot;&gt;Archerysec https://archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/archerysec/archerysec-cli&quot;&gt;Archerysec-cli https://github.com/archerysec/archerysec-cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 05 Nov 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/archerysec-cli/</link>
        <guid isPermaLink="true">http://localhost:4000/archerysec-cli/</guid>
        
        
        <category>Introduction</category>
        
      </item>
    
      <item>
        <title>DEF CON Demo Labs 2018</title>
        <description>&lt;p&gt;At DEF CON this year, we got opportunity to present Archery tool. For those who don’t know, DEF CON is one of the most widely attended security/hacker competitions in the world, hosted annually in Las Vegas. The DEF CON Demo Lab is a dedicated area for hackers to show off what they have been working on, to answer questions, and even coax attendees into giving feedback on their projects.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/defcon/defcon.JPG&quot; width=&quot;600&quot; height=&quot;450&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;We have presented Archery tool in front of huge crowd and discussed with other professionals. It is a great honor for us to participate most important and relevant information security event series in the world.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/defcon/defcon_present.png&quot; width=&quot;600&quot; height=&quot;750&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;In case you don’t know about us yet, &lt;a href=&quot;https://github.com/archerysec/archerysec&quot;&gt;ArcherySec&lt;/a&gt; is an opensource vulnerability assessment and management tool which helps developers and pentesters to perform scans and manage vulnerabilities. Archery uses popular opensource tools to perform comprehensive scanning for web application and network. It also performs web application dynamic authenticated scanning and covers the whole applications by using selenium. The developers can also utilize the tool for implementation of their DevOps CI/CD environment.&lt;/p&gt;

&lt;h4 id=&quot;learn-more&quot;&gt;Learn More&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.archerysec.com/&quot;&gt;http://www.archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/archerysec/archerysec&quot;&gt;https://github.com/archerysec/archerysec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.archerysec.com/&quot;&gt;https://docs.archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.archerysec.com/&quot;&gt;https://developers.archerysec.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 13 Aug 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/defcon-2018/</link>
        <guid isPermaLink="true">http://localhost:4000/defcon-2018/</guid>
        
        
        <category>Conference</category>
        
      </item>
    
      <item>
        <title>Black Hat Arsenal USA 2018</title>
        <description>&lt;p&gt;We got chance to present Archery tool in world largest conference BlackHat USA 2018 Arsenal at Las Vegas. It was great experience in front of huge audience.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/bh-usa/bh-usa-2.png&quot; width=&quot;640&quot; height=&quot;434&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We released new and stable version of Archery tool &lt;a href=&quot;https://github.com/archerysec/archerysec/releases&quot;&gt;Archery-v1.0&lt;/a&gt;. We’re working to solve the challenges in VA/VM and make a great tool for Vulnerability Assessment and Management tool that help info sec professionals and Developers.&lt;/p&gt;

&lt;p&gt;It has been a great chance to interact with multiple security professionals at BlackHat USA this year and discussed with them about challenges facing while doing Vulnerability Assessment and Management.&lt;/p&gt;

&lt;p&gt;Here is the key features released in Archery v1.0:&lt;/p&gt;

&lt;h4 id=&quot;dynamic-authenticated-scanning&quot;&gt;Dynamic Authenticated Scanning:&lt;/h4&gt;

&lt;p&gt;Web Dynamic Authenticated Scanning: Archery help you to perform web application dynamic authentication using inbuilt selenium integrated solution. Archery storing application authenticated cookies value into cookies_db and using ZAP Replacer its replace cookies value from headers. It’s also using selenium based authentication and grab cookies value runtime.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/arcyery_dynacmi.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Web application Dynamic Authentication Solution by Archery.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;jira-ticketing&quot;&gt;JIRA Ticketing&lt;/h4&gt;

&lt;p&gt;Archery has JIRA Ticketing system plugin that you can plug with Archery tool and raise tickets.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/jiraticket.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;JIRA Ticket Integrated and raise vulnerability ticket..&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/jira2.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;After JIRA Ticket raised issue tracking..&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;false-positive-vulnerability-tracking&quot;&gt;False Positive Vulnerability Tracking&lt;/h4&gt;

&lt;p&gt;Archery help you on removing false positive vulnerabilities after scan completion. Its very important to remove false positives vulnerabilities and work on new discovered vulnerabilities from all future scans.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/false_positive.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;False Positive marked vulnerability.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;below-are-the-change-logs&quot;&gt;Below are the change logs:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Nmap Vulners.&lt;/li&gt;
  &lt;li&gt;JIRA Ticketing.&lt;/li&gt;
  &lt;li&gt;Concurrent Scans.&lt;/li&gt;
  &lt;li&gt;SSL Tool integration.&lt;/li&gt;
  &lt;li&gt;Nikto Tool integration.&lt;/li&gt;
  &lt;li&gt;Sub Domain Scanning.&lt;/li&gt;
  &lt;li&gt;ZAP scan report parser.&lt;/li&gt;
  &lt;li&gt;Burp scan report parser.&lt;/li&gt;
  &lt;li&gt;Nessus scan report parser.&lt;/li&gt;
  &lt;li&gt;Arachni scan report parser.&lt;/li&gt;
  &lt;li&gt;Acunetix scan report parser.&lt;/li&gt;
  &lt;li&gt;Duplicate vulnerability mark.&lt;/li&gt;
  &lt;li&gt;Netsparker scan report parser.&lt;/li&gt;
  &lt;li&gt;Webinspect scan report parser.&lt;/li&gt;
  &lt;li&gt;False Positive vulnerability mark.&lt;/li&gt;
  &lt;li&gt;False Positive Tracking Dashboard.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to contribute, please visit our &lt;a href=&quot;https://github.com/archerysec/archerysec&quot;&gt;Github&lt;/a&gt; and follow instructions.&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Aug 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blackhat-usa-2018/</link>
        <guid isPermaLink="true">http://localhost:4000/blackhat-usa-2018/</guid>
        
        
        <category>Conference</category>
        
        <category>Introduction</category>
        
      </item>
    
      <item>
        <title>Black Hat Arsenal Asia 2018</title>
        <description>&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
We were very excited to be presenting Archery tool at one of the top information security conferences &lt;a href=&quot;https://www.blackhat.com/asia-18/arsenal/schedule/index.html#archery---open-source-vulnerability-assessment-and-management-9837&quot;&gt;BlackHat Aisa 2018 Arsenal&lt;/a&gt; in Singapore. It also has been great opportunity to catch up with other folks who have been working on Open Source security tool that helps security professionals.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/bh-asia/blackhat-asia2.png&quot; width=&quot;640&quot; height=&quot;434&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We have live demonstrated Archery in BlackHat Arsenal and talk about challenges facing while doing vulnerability Assessment and Management. Also were talk about how Archery solve those challenges. Below you can find the presentation slides.&lt;/p&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/jkXtN1bJ7tpG2N&quot; width=&quot;795&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/anandtiwarics1/archery-blackhat-asia-2018&quot; title=&quot;Archery - BlackHat Asia 2018 &quot; target=&quot;_blank&quot;&gt;Archery - BlackHat Asia 2018 &lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/anandtiwarics1&quot; target=&quot;_blank&quot;&gt;Anand Tiwari&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for &lt;a href=&quot;http://www.toolswatch.org/2018/01/black-hat-arsenal-asia-2018-great-lineup/&quot;&gt;Toolswatch&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.blackhat.com/asia-18/index.html&quot;&gt;BlackHat&lt;/a&gt; given us platform to introduce Archery to everyone.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/bh-asia/blackhat-asia3.png&quot; width=&quot;600&quot; height=&quot;450&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Also we meet Arsenal presenters and discussed about the Open Source projects.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;/assets/images/bh-asia/blackhat-asia4.png&quot; width=&quot;640&quot; height=&quot;434&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;We have released beta version of Archery with below features.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dashboard&lt;/li&gt;
  &lt;li&gt;Web Dashboard&lt;/li&gt;
  &lt;li&gt;Network Dashboard&lt;/li&gt;
  &lt;li&gt;Project Dashboard&lt;/li&gt;
  &lt;li&gt;OWASP ZAP Scanner integration.&lt;/li&gt;
  &lt;li&gt;Burp Scanner integration.&lt;/li&gt;
  &lt;li&gt;Arachni Scanner report parser.&lt;/li&gt;
  &lt;li&gt;OpenVAS plugin and parser.&lt;/li&gt;
  &lt;li&gt;Authentication&lt;/li&gt;
  &lt;li&gt;Project view and create.&lt;/li&gt;
  &lt;li&gt;Webscan View and Launch.&lt;/li&gt;
  &lt;li&gt;Network Scans view and Launch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can download from &lt;a href=&quot;https://github.com/archerysec/archerysec/releases&quot;&gt;ArcherySec GitHub&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 23 Mar 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/blackhat-asia-2018/</link>
        <guid isPermaLink="true">http://localhost:4000/blackhat-asia-2018/</guid>
        
        
        <category>Conference</category>
        
        <category>Introduction</category>
        
      </item>
    
      <item>
        <title>Archery - Vulnerability Assessment and Management Tool</title>
        <description>&lt;p&gt;&lt;em&gt; “Archery is an opensource vulnerability assessment and management tool which helps developers and pentesters to perform scans and manage vulnerabilities. Archery uses popular opensource tools to perform comprehensive scanning for web application and network. It also performs web application dynamic authenticated scanning and covers the whole applications by using selenium. The developers can also utilize the tool for implementation of their DevOps CI/CD environment.”
&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Organisation continue to struggle with implementing a robust, scalable, effective and user-friendly Vulnerability Assessment and Management program that is capable of showing a quantifiable reduction in risk to the business despite the existence and need for these programs for the last decade or more. In the blog we’ll look how Archery will help you to organize your scanners and manage vulnerabilities in a automated way. Also we’ll get to know the features of Archery and how to use &amp;amp; utilize them.&lt;/p&gt;

&lt;blockquote&gt;&lt;em&gt;A vulnerability assessment is the process of identifying, quantifying, and prioritizing the vulnerabilities in a system. — &lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Vulnerability_assessment&quot; data-href=&quot;https://en.wikipedia.org/wiki/Vulnerability_assessment&quot; target=&quot;_blank&quot;&gt;Wikipedia&lt;/a&gt;
 &lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/vuln_cycle.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Vulnerability Assessment and Management Cycle.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;Vulnerability management is the “cyclical practice of identifying, classifying, remediating, and mitigating vulnerabilities”, particularly in software. Vulnerability management is integral to computer security and network security, and must not be confused with Vulnerability assessment. &lt;a href=&quot;https://en.wikipedia.org/wiki/Vulnerability_management&quot; data-href=&quot;https://en.wikipedia.org/wiki/Vulnerability_management&quot; class=&quot;markup--anchor markup--pullquote-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Wikipedia&lt;/a&gt;&lt;/blockquote&gt;

&lt;h4 id=&quot;challenges-in-vulnerability-assessment-and-management&quot;&gt;Challenges in Vulnerability Assessment and Management&lt;/h4&gt;

&lt;p&gt;Let’s explore those challenges which we commonly face while doing vulnerability assessment and management.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Multiple Scanners&lt;/strong&gt;: We have multiple open source and commercial tools in our organization to perform vulnerability scanning. It is pain full task to manage multiple scanners.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;False Positive Removal&lt;/strong&gt;: Most profound challenge is to remove multiple false positive vulnerabilities from scanners and remove from future periodic scans.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Vulnerability Prioritization&lt;/strong&gt;: Today, many organizations prioritize based on CVSS score and perform some level of asset importance classification within the process. However, this is still generating too much data for remediation teams to take targeted and informed action. In a larger organization, this process can result in tens of thousands — or even millions — of vulnerabilities detected.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Remediation and Tracking&lt;/strong&gt;: Vulnerability remediation and tracking is the one of the most challenging part of vulnerability assessment and management. There is no technology that can easily and economically solve the problem, there are ways to enable better management through automation that can improve the process and influence user behavior. In other words, synchronizing communication between internal teams through workflow automation can help accelerate the remediation process. From simple ticket and task management to notifications and patch deployment, the ability to track the remediation process within a single unified view can eliminate the need to navigate and update multiple systems and potentially result in significant time savings.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-archery-try-to-solve-these-challenges&quot;&gt;How Archery try to solve these challenges.&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Vulnerability Assessment and Management Tool&lt;/strong&gt;: Archery is an open source tool that helps you to plug vulnerability scanners like ZAP Scanner, Burp Scanner, OpenVAS etc. Once you configure your scanners Archery triggers scan into multiple scanners and correlates, collaborate all raw scans data, show them in a consolidated manner. Its also automate your scanners and do web dynamic scanning.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/how_arc_work.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;High-level Archery Architecture..&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;2. Web Dynamic Authenticated Scanning&lt;/strong&gt;: Archery help you to perform web application dynamic authentication using inbuilt selenium integrated solution. Archery storing application authenticated cookies value into cookies_db and using ZAP Replacer its replace cookies value from headers. It’s also using selenium based authentication and grab cookies value runtime.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/arcyery_dynacmi.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Web application Dynamic Authentication Solution by Archery.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;3. Manage False Positives Vulnerabilities:&lt;/strong&gt; Archery help you on removing false positive vulnerabilities after scan completion. Its very important to remove false positives vulnerabilities and work on new discovered vulnerabilities from all future scans.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/false_positive.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;False Positive marked vulnerability.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;4. JIRA Ticketing:&lt;/strong&gt; Archery has JIRA Ticketing system plugin that you can plug with Archery tool and raise tickets.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/jiraticket.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;JIRA Ticket Integrated and raise vulnerability ticket..&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/jira2.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;After JIRA Ticket raised issue tracking..&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Web Scanners Plugin &amp;amp; Parser:&lt;/strong&gt; We are working on to writing plugins and parsers for open source and commercial scanners.&lt;/p&gt;

&lt;p&gt;Currently Archery supports below Web Scanners plugin and parser —&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ZAP Scanner (Plugin and XML Parser) Open Source.&lt;/li&gt;
  &lt;li&gt;Burp Scanner (Plugin and XML Parser) Commercial or Pro Version.&lt;/li&gt;
  &lt;li&gt;arachni scanner (XML Parser) Open Source.&lt;/li&gt;
  &lt;li&gt;Netsparker (XML Parser) Commercial Scanner.&lt;/li&gt;
  &lt;li&gt;Webinspect (XML Parser) Commercial Scanner.&lt;/li&gt;
  &lt;li&gt;Acunetix (XML Parser) Commercial Scanner.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Network Scanners Plugin &amp;amp; Parser:&lt;/strong&gt; There are multiple open source and commercial tools &amp;amp; scanners are available to perform network vulnerability assessment. We also working on to integrate those scanners plugin with Archery.&lt;/p&gt;

&lt;p&gt;Currently we supports below Network scanners —&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenVAS (Plugin and XML Parser) Open Source.&lt;/li&gt;
  &lt;li&gt;Nessus Scanner (nessus file Parser) Commercial Scanner.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Tools integrated:&lt;/strong&gt; We are doing multiple experiment with multiple available open source security tool to integrate with Archery. We have integrated some of popular tool which helps on doing Vulnerability Assessment.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SSLScan&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/archery_ssl.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;SSLScan tool integrated into Archery tool.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nikto&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/nikto.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Nikto tool Integrated into Archery Tool.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nmap + Vulners&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/nmap_vulns.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Nmap and Vulners Integrated into Archery tool.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Integrated OSINT:&lt;/strong&gt; Archery has integrated some OSINT tool like Sublist3r to extract sub-domains which is useful to have run vulnerability assessment. Currently we are experimenting with various OSINT tools and trying to integrate with Archery tool.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/domainlist.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;OSINT way subdomain Sublist3r integrated.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Dashboards:&lt;/strong&gt; The dashboard provides a summarised view of vulnerability assessment results. Vulnerability analytics has monthly trends of High, Medium and Low findings. Also it has web and network pie &amp;amp; bar charts which gives overall summary of findings.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/overall_dashboard.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Archery Dashboard.&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/images/archeryblog/pie&amp;amp;bar.png&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;em&gt;Archery Dashboard..&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/archerysec/archerysec&quot;&gt;https://github.com/archerysec/archerysec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://archerysec.com/&quot;&gt;https://archerysec.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.computerworld.ph/print-article/86303/&quot;&gt;https://www.computerworld.ph/print-article/86303/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.networkworld.com/article/2980303/security/three-key-challenges-in-vulnerability-risk-management.html&quot;&gt;https://www.networkworld.com/article/2980303/security/three-key-challenges-in-vulnerability-risk-management.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 11 Jan 2018 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/quick-start-guide/</link>
        <guid isPermaLink="true">http://localhost:4000/quick-start-guide/</guid>
        
        
        <category>Tutorial</category>
        
        <category>Introduction</category>
        
      </item>
    
  </channel>
</rss>
